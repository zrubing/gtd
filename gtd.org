* Android
  :LOGBOOK:
  CLOCK: [2017-05-06 周六 09:30]--[2017-05-06 周六 09:31] =>  0:01
  :END:
** STARTED [[http://design-patterns.readthedocs.io/zh_CN/latest/read_uml.html][UML 类图和时序图]]
   :LOGBOOK:
   CLOCK: [2016-09-18 周日 14:06]--[2016-09-18 周日 14:20] =>  0:14
   :END:
** STARTED [[https://github.com/simple-android-framework-exchange/android_design_patterns_analysis][android 设计模式]]
   :LOGBOOK:
   CLOCK: [2016-09-18 周日 14:27]--[2016-09-18 周日 14:53] => 0:26
   :END:
** 四大组件
*** STARTED [[http://blog.csdn.net/guolin_blog/article/details/11952435][service]]
    :LOGBOOK:
    CLOCK: [2016-09-18 周日 15:00]--[2016-09-18 周日 15:29] => 0:29
    :END:
** STARTED [[http://gityuan.com/2015/10/31/binder-prepare/][binder]]
   :LOGBOOK:
   CLOCK: [2017-02-11 周六 10:40]--[2017-02-11 周六 11:05] =>  0:25
   :END:
** [[https://drakeet.me/effective-multitype][multilType]]
** STARTED [[http://www.gcssloop.com/customview/CustomViewIndex][自定义 view]]
   :LOGBOOK:
   CLOCK: [2017-02-11 周六 09:57]--[2017-02-11 周六 10:22] =>  0:25
   CLOCK: [2017-02-09 周四 21:54]--[2017-02-09 周四 22:19] =>  0:25
   CLOCK: [2017-02-08 周三 13:25]--[2017-02-08 周三 13:50] =>  0:25
   CLOCK: [2017-02-05 周日 11:24]--[2017-02-05 周日 11:49] =>  0:25
   CLOCK: [2017-02-04 周六 14:56]--[2017-02-04 周六 15:21] =>  0:25
   CLOCK: [2017-02-03 周五 16:42]--[2017-02-03 周五 17:07] =>  0:25
   CLOCK: [2016-09-20 周二 17:08]--[2016-09-20 周二 17:33] =>  0:25
   :END:
** STARTED [[https://hltj.gitbooks.io/kotlin-reference-chinese/content/txt/getting-started.html][kotlin]]
   :LOGBOOK:
   CLOCK: [2016-11-25 周五 17:41]--[2016-11-26 周六 10:11] => 16:30
   CLOCK: [2016-11-24 周四 17:48]--[2016-11-24 周四 18:13] =>  0:25
   CLOCK: [2016-11-23 周三 16:31]--[2016-11-23 周三 16:56] =>  0:25
   CLOCK: [2016-11-20 周日 00:01]--[2016-11-20 周日 00:26] =>  0:25
   CLOCK: [2016-09-25 周日 20:08]--[2016-09-25 周日 20:14] =>  0:06
   CLOCK: [2016-09-22 周四 13:11]--[2016-09-22 周四 13:36] =>  0:25
   CLOCK: [2016-09-21 周三 11:00]--[2016-09-21 周三 11:25] =>  0:25
   :END:
** STARTED [[https://wangjiegulu.gitbooks.io/kotlin-for-android-developers-zh/content/jie_wei.html][kotlin for android developers]]
   :LOGBOOK:
   CLOCK: [2016-11-23 周三 22:10]--[2016-11-23 周三 22:35] =>  0:25
   CLOCK: [2016-11-23 周三 14:42]--[2016-11-23 周三 15:07] =>  0:25
   CLOCK: [2016-11-22 周二 13:43]--[2016-11-22 周二 14:08] =>  0:25
   CLOCK: [2016-11-21 周一 22:11]--[2016-11-21 周一 22:36] =>  0:25
   CLOCK: [2016-11-20 周日 15:00]--[2016-11-20 周日 15:25] =>  0:25
   CLOCK: [2016-11-19 周六 23:15]--[2016-11-19 周六 23:40] =>  0:25
   :END:
** STARTED [[http://jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0512/2869.html][自定义 xmlView]]
   :LOGBOOK:
   CLOCK: [2016-11-23 周三 09:41]--[2016-11-23 周三 10:06] =>  0:25
   :END:
** STARTED [[http://blog.chengyunfeng.com/?p=983][RxJava]]
   :LOGBOOK:
   CLOCK: [2017-02-09 周四 23:39]--[2017-02-10 周五 00:06] =>  0:27
   CLOCK: [2017-02-08 周三 20:37]--[2017-02-08 周三 21:02] =>  0:25
   CLOCK: [2017-02-05 周日 14:45]--[2017-02-05 周日 15:10] =>  0:25
   CLOCK: [2017-01-10 周二 11:49]--[2017-01-10 周二 12:14] =>  0:25
   :END:
*** [[https://mcxiaoke.gitbooks.io/rxdocs/content/Observables.html][ReactiveX 中文文档]]
*** [[http://blog.chengyunfeng.com/?p=948][云在千峰]]
*** [[http://blog.chengyunfeng.com/?p=959][创建事件流]]
*** STARTED [[http://wingjay.com/2016/07/14/RxLifecycle%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%8D%E5%BD%93Activity%E8%A2%ABdestory%E6%97%B6%E8%87%AA%E5%8A%A8%E6%9A%82%E5%81%9C%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/][RxLifeCycle]]
    :LOGBOOK:
    CLOCK: [2017-03-21 周二 15:41]--[2017-03-21 周二 15:59] =>  0:18
    CLOCK: [2017-03-21 周二 15:08]--[2017-03-21 周二 15:33] =>  0:25
    :END:
** android 笔试面试题

*** [[http://www.100mian.com/mianshi/android/49868.html][避免 oom]]
** [[http://szysky.com/tags/#][android 开发艺术探索抄书笔记]]
** [[https://blog.piasy.com/][site]]
** [[http://liuwangshu.cn/system/][刘望舒]]
** [[http://hencoder.com/][扔物线]]
* [[https://classroom.udacity.com/nanodegrees/nd009/parts/0091345400/modules/009134540075460/lessons/6d6c5cc6-08eb-4e8b-8408-854e49584028/concepts/9556c8b3-6593-49b3-a44d-ef83febc6447][MachineLeanring]]
  :LOGBOOK:
  CLOCK: [2016-12-13 周二 22:55]--[2016-12-13 周二 23:20] =>  0:25
  CLOCK: [2016-12-12 周一 23:34]--[2016-12-12 周一 23:59] =>  0:25
  CLOCK: [2016-12-07 周三 20:01]--[2016-12-07 周三 20:26] =>  0:25
  CLOCK: [2016-12-06 周二 20:49]--[2016-12-06 周二 21:14] =>  0:25
  :END:
* nodejs
** STARTED [[http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/00143449917624134f5c4695b524e81a581ab5a222b05ec000][js 廖雪峰]]
   :LOGBOOK:
   CLOCK: [2016-09-25 周日 19:27]--[2016-09-25 周日 19:52] =>  0:25
   CLOCK: [2016-09-24 周六 10:58]--[2016-09-24 周六 11:23] =>  0:25
   CLOCK: [2016-09-22 周四 12:13]--[2016-09-22 周四 12:38] =>  0:25
   CLOCK: [2016-09-21 周三 09:53]--[2016-09-21 周三 10:18] =>  0:25
   CLOCK: [2016-09-20 周二 16:27]--[2016-09-20 周二 16:52] =>  0:25
   :END:
* python
** STARTED [[https://wizardforcel.gitbooks.io/think-python-2e/content/11.html][python tutorial]]
   :LOGBOOK:
   CLOCK: [2016-09-18 周日 12:40]--[2016-09-18 周日 13:05] =>  0:25
   CLOCK: [2016-09-18 周日 11:33]--[2016-09-18 周日 11:58] =>  0:25
   CLOCK: [2016-09-18 周日 10:55]--[2016-09-18 周日 11:22] =>  0:27
   CLOCK: [2016-09-14 周三 09:46]--[2016-09-14 周三 10:20] =>  0:34
   :END:
** STARTED [[http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000][廖雪峰]]
   :LOGBOOK:
   CLOCK: [2017-07-10 周一 11:06]--[2017-07-10 周一 11:31] =>  0:25 下一节,使用 list 和 tuple
   CLOCK: [2017-03-27 周一 23:26]--[2017-03-27 周一 23:51] =>  0:25
   CLOCK: [2017-03-24 周五 22:04]--[2017-03-24 周五 22:29] =>  0:25
   CLOCK: [2017-03-22 周三 22:36]--[2017-03-22 周三 23:01] =>  0:25
   CLOCK: [2017-03-21 周二 22:36]--[2017-03-21 周二 23:01] =>  0:25
   CLOCK: [2017-03-20 周一 23:49]--[2017-03-21 周二 00:14] =>  0:25
   CLOCK: [2017-03-19 周日 22:14]--[2017-03-19 周日 22:39] =>  0:25
   CLOCK: [2017-03-18 周六 22:45]--[2017-03-18 周六 23:10] =>  0:25
   CLOCK: [2017-03-15 周三 22:52]--[2017-03-15 周三 23:17] =>  0:25
   CLOCK: [2017-03-15 周三 22:20]--[2017-03-15 周三 22:45] =>  0:25
   CLOCK: [2017-03-14 周二 23:25]--[2017-03-14 周二 23:50] =>  0:25
   CLOCK: [2017-03-14 周二 22:52]--[2017-03-14 周二 23:17] =>  0:25
   CLOCK: [2017-03-14 周二 13:21]--[2017-03-14 周二 13:46] =>  0:25
   CLOCK: [2017-03-14 周二 12:21]--[2017-03-14 周二 12:30] =>  0:09
   CLOCK: [2017-03-06 周一 13:11]--[2017-03-06 周一 13:36] =>  0:25
   CLOCK: [2017-01-24 周二 19:43]--[2017-01-24 周二 20:08] =>  0:25
   CLOCK: [2016-12-12 周一 22:55]--[2016-12-12 周一 23:20] =>  0:25
   CLOCK: [2016-09-24 周六 12:59]--[2016-09-24 周六 13:25] =>  0:26
   CLOCK: [2016-09-24 周六 11:58]--[2016-09-24 周六 12:09] =>  0:11
   CLOCK: [2016-09-22 周四 14:55]--[2016-09-22 周四 15:20] =>  0:25 匿名函数
   CLOCK: [2016-09-21 周三 09:16]--[2016-09-21 周三 09:41] =>  0:25 迭代器
   CLOCK: [2016-09-20 周二 14:26]--[2016-09-20 周二 14:51] =>  0:25 列表生成式
   CLOCK: [2016-09-20 周二 13:27]--[2016-09-20 周二 13:53] =>  0:26
   :END:
** STARTED django
   :LOGBOOK:
   CLOCK: [2017-06-30 周五 11:09]--[2017-06-30 周五 11:34] =>  0:25
   :END:
*** DONE 上传图片到七牛云
    CLOSED: [2017-07-01 周六 18:49]
    - State "DONE"       from "STARTED"    [2017-07-01 周六 18:49]
    - State "STARTED"    from "DONE"       [2017-07-01 周六 17:21]
    - State "DONE"       from "STARTED"    [2017-06-30 周五 15:14]
    :LOGBOOK:
    CLOCK: [2017-07-01 周六 17:21]--[2017-07-01 周六 18:47] =>  1:26
    CLOCK: [2017-06-30 周五 13:56]--[2017-06-30 周五 14:21] =>  0:25
    CLOCK: [2017-06-30 周五 12:50]--[2017-06-30 周五 13:15] =>  0:25
    :END:
*** 获取七牛返回的值，保存到数据库
** [[http://www.pythondoc.com/flask-mega-tutorial/index.html][flask]]
   :LOGBOOK:
   CLOCK: [2017-09-01 周五 16:07]--[2017-09-01 周五 16:32] =>  0:25
   CLOCK: [2017-08-31 周四 17:52]--[2017-08-31 周四 18:17] =>  0:25
   CLOCK: [2017-08-29 周二 10:59]--[2017-08-29 周二 11:24] =>  0:25
   CLOCK: [2017-08-21 一 23:29]--[2017-08-21 一 23:54] =>  0:25
   :END:
* AI
** STARTED computer vision
   :LOGBOOK:
   CLOCK: [2017-03-02 周四 22:23]--[2017-03-02 周四 22:48] =>  0:25
   CLOCK: [2017-02-08 周三 12:07]--[2017-02-08 周三 12:32] =>  0:25
   CLOCK: [2017-02-06 周一 11:51]--[2017-02-06 周一 12:16] =>  0:25
   CLOCK: [2017-02-05 周日 12:59]--[2017-02-05 周日 13:24] =>  0:25
   CLOCK: [2017-01-25 周三 21:05]--[2017-01-25 周三 21:30] =>  0:25
   CLOCK: [2017-01-25 周三 18:59]--[2017-01-25 周三 19:24] =>  0:25
   CLOCK: [2017-01-25 周三 18:26]--[2017-01-25 周三 18:31] =>  0:05
   CLOCK: [2017-01-25 周三 10:10]--[2017-01-25 周三 10:35] =>  0:25
   CLOCK: [2017-01-24 周二 21:32]--[2017-01-24 周二 21:57] =>  0:25
   :END:
** STARTED [[http://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_tutorials.html][openCV_PyTutorials]]
** STARTED [[https://www.youtube.com/results?search_query=udacity+artificial+intelligence][udacity-artifical-intiligence]]
   :LOGBOOK:
   CLOCK: [2017-04-19 周三 23:25]--[2017-04-19 周三 23:50] =>  0:25
   :END:
* MongoDB
** STARTED [[http://www.runoob.com/mongodb/mongodb-relationships.html][简单教程]]
   :LOGBOOK:
   CLOCK: [2016-09-13 周二 16:16]--[2016-09-13 周二 16:48] =>  0:32
   :END:
* 计算机
** [[http://scse.buaa.edu.cn/buaa-css-web/articleDetail.action;jsessionid=DBFB2A8FE1CD0441D85FC0F7057D0C83?articleId=2bff0a2e-f114-4853-9bd3-dd6515a98bff&type=NEWS&firstSelId=6e011b46-2c70-4f68-a633-ec51f42b4718&secondSelId=NOTICE_PUBLICITY&language=0][专业课大纲]]
** STARTED [[https://www.coursera.org/learn/unity-yinqing-youxi-kaifa/lecture/xlbGz/ben-men-ke-cheng-jie-shao][Unity开发基础]]
   :LOGBOOK:
   CLOCK: [2017-09-20 三 10:59]--[2017-09-20 三 11:24] =>  0:25
   CLOCK: [2017-09-18 周一 16:29]--[2017-09-18 周一 16:54] =>  0:25
   CLOCK: [2017-09-17 日 18:46]--[2017-09-17 日 19:11] =>  0:25
   CLOCK: [2017-09-11 一 22:30]--[2017-09-11 一 22:55] =>  0:25
   CLOCK: [2017-09-10 日 17:31]--[2017-09-10 日 17:56] =>  0:25
   CLOCK: [2017-03-24 周五 22:42]--[2017-03-24 周五 23:07] =>  0:25
   CLOCK: [2017-03-19 周日 23:17]--[2017-03-19 周日 23:42] =>  0:25
   CLOCK: [2017-03-18 周六 23:40]--[2017-03-19 周日 00:05] =>  0:25
   CLOCK: [2017-03-10 周五 23:43]--[2017-03-11 周六 00:08] =>  0:25
   CLOCK: [2017-03-09 周四 22:35]--[2017-03-09 周四 23:00] =>  0:25
   CLOCK: [2017-03-08 周三 22:37]--[2017-03-08 周三 23:02] =>  0:25
   :END:
*** 第二周
    - [X] 物理系统与图形系统
      - [X] 光源
      - [X] 摄像机
    - [X] 音频与项目部署
      - [X] 音频
      - [X] 项目部署pc&移动
*** 第三周c#
    - [X] 简介&集成开发环境
    - [X] 基本语法
      - [X] 基本语法结构
      - [X] 变量与表达式
      - [X] 流程控制
    - [X] 变量进阶与函数
      - [X] 值类型和引用类型
    - [X] 面向对象
      - [X] 面向对象的含义
      - [X] 面向对象的技术
      - [X] 类的定义与使用
    - 
*** 第四周 MoocHero
    - [X] c#编写unity脚本
      - [X] 骨牌脚本讲解
    - [X] 概述
    - [X] 地形系统
    - [ ] 动画系统
    - [ ] 游戏逻辑-玩家与敌人
    - [ ] 游戏逻辑-游戏管理
    - [ ] 总结
*** 第五周 unity高级特性与移动平台开发
    - [ ] 概述
    - [ ] 游戏人称变换
    - [ ] 图形用户界面与移动平台界面
    - [ ] 粒子系统与线渲染器
    - [ ] 物品收集，游戏胜利与失败画面
    - [ ] 完整版总结
** 算法 目录12
   :LOGBOOK:
   CLOCK: [2017-09-19 周二 11:07]--[2017-09-19 周二 11:32] =>  0:25
   CLOCK: [2017-09-18 周一 17:04]--[2017-09-18 周一 17:29] =>  0:25
   :END:
*** 基础
   - [X] 基础编程模型
     - [X] api 30
     - [X] 字符串
     - [X] 输入输出 35
     - [X] 二分查找 42
   - [-] 1.2数据抽象
     - [X] 1.2.1使用抽象数据类型
       - [X] 1.抽象数据类型的api
       - [X] 2.继承的方法 toString()
       - [X] 3.用例代码
       - [X] 4.对象
       - [X] 9.对象作为参数 java是引用传递 56
       - [X] 10.对象作为返回值 返回引用
       - [X] 11.数组也是对象
       - [X] 12.对象的数组 是由对象引用构成的数组
     - [-] 1.2.2抽象数据类型举例
       - [X] 1.几何对象 59
       - [ ] 2.信息处理 61
   - [ ] 背包队列和栈
*** 排序
* khan
  :LOGBOOK:
  CLOCK: [2017-04-13 周四 00:07]--[2017-04-13 周四 00:32] =>  0:25
  :END:
* [[http://blog.chengyunfeng.com/?p=1032][动态 version]]
* 舞蕾
  :LOGBOOK:
  CLOCK: [2017-05-12 周五 10:12]--[2017-05-12 周五 10:37] =>  0:25
  CLOCK: [2017-05-03 周三 11:46]--[2017-05-03 周三 12:11] =>  0:25
  CLOCK: [2017-04-28 周五 14:06]--[2017-04-28 周五 14:31] =>  0:25
  :END:
** STARTED 学生端 api 
   :LOGBOOK:
   CLOCK: [2017-05-08 周一 10:41]--[2017-05-12 周五 09:21] => 94:40
   CLOCK: [2017-05-08 周一 10:04]--[2017-05-08 周一 10:29] =>  0:25
   CLOCK: [2017-05-06 周六 14:08]--[2017-05-06 周六 14:33] =>  0:25
   CLOCK: [2017-05-05 周五 09:12]--[2017-05-05 周五 09:24] =>  0:12
   CLOCK: [2017-05-04 周四 15:46]--[2017-05-04 周四 16:11] =>  0:25
   CLOCK: [2017-05-04 周四 14:02]--[2017-05-04 周四 14:27] =>  0:25
   CLOCK: [2017-05-04 周四 11:17]--[2017-05-04 周四 11:42] =>  0:25
   CLOCK: [2017-05-04 周四 10:14]--[2017-05-04 周四 10:39] =>  0:25
   CLOCK: [2017-05-03 周三 16:49]--[2017-05-03 周三 17:14] =>  0:25
   CLOCK: [2017-05-03 周三 13:13]--[2017-05-03 周三 13:38] =>  0:25
   CLOCK: [2017-05-03 周三 10:03]--[2017-05-03 周三 10:28] =>  0:25
   CLOCK: [2017-05-02 周二 16:00]--[2017-05-02 周二 16:25] =>  0:25
   CLOCK: [2017-05-02 周二 14:07]--[2017-05-02 周二 14:32] =>  0:25
   CLOCK: [2017-05-02 周二 09:21]--[2017-05-02 周二 09:46] =>  0:25
   CLOCK: [2017-04-28 周五 14:50]--[2017-04-28 周五 15:15] =>  0:25
   CLOCK: [2017-04-28 周五 10:39]--[2017-04-28 周五 10:44] =>  0:05
   CLOCK: [2017-04-28 周五 09:04]--[2017-04-28 周五 09:29] =>  0:25
   CLOCK: [2017-04-27 周四 16:00]--[2017-04-27 周四 16:16] =>  0:16
   CLOCK: [2017-04-27 周四 10:17]--[2017-04-27 周四 10:42] =>  0:25
   CLOCK: [2017-04-27 周四 09:09]--[2017-04-27 周四 09:34] =>  0:25
   CLOCK: [2017-04-26 周三 16:59]--[2017-04-26 周三 17:24] =>  0:25
   CLOCK: [2017-04-26 周三 13:19]--[2017-04-26 周三 13:44] =>  0:25
   CLOCK: [2017-04-26 周三 10:52]--[2017-04-26 周三 11:17] =>  0:25
   CLOCK: [2017-04-26 周三 09:27]--[2017-04-26 周三 09:52] =>  0:25
   CLOCK: [2017-04-25 周二 16:45]--[2017-04-25 周二 17:10] =>  0:25
   CLOCK: [2017-04-25 周二 16:05]--[2017-04-25 周二 16:30] =>  0:25
   CLOCK: [2017-04-25 周二 13:49]--[2017-04-25 周二 14:14] =>  0:25
   CLOCK: [2017-04-25 周二 11:10]--[2017-04-25 周二 11:35] =>  0:25
   CLOCK: [2017-04-25 周二 10:24]--[2017-04-25 周二 10:49] =>  0:25
   CLOCK: [2017-04-22 周六 16:26]--[2017-04-22 周六 16:51] =>  0:25
   CLOCK: [2017-04-22 周六 14:23]--[2017-04-22 周六 14:48] =>  0:25
   CLOCK: [2017-04-22 周六 12:54]--[2017-04-22 周六 13:19] =>  0:25
   CLOCK: [2017-04-22 周六 10:55]--[2017-04-22 周六 11:20] =>  0:25
   CLOCK: [2017-04-22 周六 09:48]--[2017-04-22 周六 10:13] =>  0:25
   CLOCK: [2017-04-22 周六 09:13]--[2017-04-22 周六 09:38] =>  0:25
   CLOCK: [2017-04-21 周五 16:18]--[2017-04-21 周五 16:43] =>  0:25
   CLOCK: [2017-04-21 周五 13:52]--[2017-04-21 周五 14:17] =>  0:25
   CLOCK: [2017-04-21 周五 10:41]--[2017-04-21 周五 11:06] =>  0:25
   CLOCK: [2017-04-21 周五 15:02]--[2017-04-21 周五 15:27] =>  0:25
   :END:
* [[https://www.youtube.com/results?search_query=udacity+artificial+intelligence][udacityAiRobotics]]
  :LOGBOOK:
  CLOCK: [2017-07-18 周二 23:50]--[2017-07-19 周三 00:15] =>  0:25
  CLOCK: [2017-07-17 周一 15:45]--[2017-07-17 周一 16:10] =>  0:25 下一集 70
  CLOCK: [2017-07-10 周一 18:09]--[2017-07-10 周一 18:31] =>  0:22
  CLOCK: [2017-07-09 周日 23:10]--[2017-07-09 周日 23:35] =>  0:25 下一集 66
  CLOCK: [2017-07-06 周四 00:17]--[2017-07-06 周四 00:42] =>  0:25 下一集 58
  CLOCK: [2017-07-03 周一 13:40]--[2017-07-03 周一 14:05] =>  0:25 下一集 40
  CLOCK: [2017-07-03 周一 12:22]--[2017-07-03 周一 12:47] =>  0:25 下一集 32
  CLOCK: [2017-07-01 周六 18:57]--[2017-07-01 周六 19:22] =>  0:25
  CLOCK: [2017-06-30 周五 22:39]--[2017-06-30 周五 23:04] =>  0:25 下一集 14
  CLOCK: [2017-04-28 周五 22:56]--[2017-04-28 周五 23:21] =>  0:25
  CLOCK: [2017-04-27 周四 23:17]--[2017-04-27 周四 23:42] =>  0:25 58 贝叶斯
  CLOCK: [2017-04-26 周三 23:24]--[2017-04-26 周三 23:49] =>  0:25 46
  CLOCK: [2017-04-21 周五 23:19]--[2017-04-21 周五 23:44] =>  0:25
  :END:
* otherTime
  :LOGBOOK:
  CLOCK: [2017-04-27 周四 16:16]--[2017-04-27 周四 16:25] =>  0:09
  CLOCK: [2017-04-27 周四 14:17]--[2017-04-27 周四 14:42] =>  0:25
  CLOCK: [2017-04-27 周四 11:34]--[2017-04-27 周四 11:59] =>  0:25
  :END:
* lua
** [[http://shahdza.blog.51cto.com/2410787/1538818][夏天的风]]
** STARTED [[http://www.cocos.com/docs/native/v3/basic-concepts/zh.html][cocos2dx cpp]]
   - State "TODO"       from "CANCELLED"  [2017-06-30 周五 16:41]
   :LOGBOOK:
   CLOCK: [2017-07-10 周一 16:06]--[2017-07-10 周一 16:31] =>  0:25
   CLOCK: [2017-07-10 周一 10:16]--[2017-07-10 周一 10:41] =>  0:25
   CLOCK: [2017-07-06 周四 10:28]--[2017-07-06 周四 10:53] =>  0:25
   CLOCK: [2017-07-03 周一 15:59]--[2017-07-03 周一 16:24] =>  0:25
   CLOCK: [2017-07-03 周一 10:54]--[2017-07-03 周一 11:19] =>  0:25 动作
   CLOCK: [2017-07-01 周六 16:43]--[2017-07-01 周六 17:08] =>  0:25 坐标系详解
   CLOCK: [2017-06-30 周五 16:31]--[2017-06-30 周五 16:40] =>  0:09
   :END:
* [[http://www.cnblogs.com/holbrook/archive/2012/04/12/2444992.html][org-mode]]
  :LOGBOOK:
  CLOCK: [2017-08-22 二 00:35]--[2017-08-22 二 01:00] =>  0:25
  :END:
** [[http://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html#sec-7][简明手册]]
* book
** 未来简史
   :LOGBOOK:
   CLOCK: [2017-08-22 周二 10:34]--[2017-08-22 周二 10:59] =>  0:25
   :END:
* TODO c,c++
  :LOGBOOK:
  CLOCK: [2017-09-19 周二 16:33]--[2017-09-19 周二 16:58] =>  0:25
  :END:
** c[100%]
   :LOGBOOK:
   CLOCK: [2017-09-05 二 21:00]--[2017-09-05 二 21:25] => 0:25
   CLOCK: [2017-09-01 周五 15:13]--[2017-09-01 周五 15:38] =>  0:25
   - [X] 函数指针与回调函数
   - [X] C结构体
     - [X] 访问结构成员
     - [X] 结构作为函数参数
     - [X] 指向结构的指针
     - [X] 位域
   - [X] C共用体
     - [X] 定义共用体
     - [X] 访问共用体成员
   - [X] C位域
*** c++
    - [X] c++引用
      - 把引用作为参数
      - 引用作为返回值
    - [X] c++命名空间
    - [ ] 模板
      函数模板
      类模板
    - [ ] web编程
    - 
   :LOGBOOK:
   CLOCK: [2017-09-14 周四 14:06]
   CLOCK: [2017-09-14 周四 12:20]--[2017-09-14 周四 12:31] =>  0:11
   CLOCK: [2017-09-06 周三 10:05]--[2017-09-06 周三 10:30] =>  0:25
   CLOCK: [2017-09-04 一 11:34]--[2017-09-04 一 11:59] =>  0:25
   CLOCK: [2017-09-01 周五 14:38]--[2017-09-01 周五 15:03] =>  0:25
   CLOCK: [2017-08-31 周四 14:13]--[2017-08-31 周四 14:38] =>  0:25
   CLOCK: [2017-08-29 周二 10:17]--[2017-08-29 周二 10:42] =>  0:25
   CLOCK: [2017-08-28 一 22:51]--[2017-08-28 一 23:16] =>  0:25
   CLOCK: [2017-08-28 周一 00:32]--[2017-08-28 周一 00:57] =>  0:25
   CLOCK: [2017-08-27 周日 11:11]--[2017-08-27 周日 11:36] =>  0:25
   CLOCK: [2017-08-26 周六 20:56]--[2017-08-26 周六 21:22] =>  0:26
   CLOCK: [2017-08-26 周六 00:25]--[2017-08-26 周六 00:50] =>  0:25
   :END:
* cocos
** [[http://blog.sina.com.cn/s/blog_4057ab62010197z8.html][module import android.mk]]
* [[https://qbgbook.gitbooks.io/spring-boot-reference-guide-zh/content/][spring boot]]
  - [X] 13构建系统
    - [X] gradle
    - [X] [[https://qbgbook.gitbooks.io/spring-boot-reference-guide-zh/content/III.%20Using%20Spring%20Boot/13.5.%20Starters.html][starters列表]]
  - [-] 14组织代码
    - [X] 使用defalut包
    - [ ] 放置应用的main类
  :LOGBOOK:
  CLOCK: [2017-09-06 周三 13:32]--[2017-09-06 周三 13:57] =>  0:25
  :END:
* socket
  - [ ] [[http://www.cnblogs.com/hellojava/archive/2013/01/25/2861127.html][循序渐进socket编程java]]
  - 
* 9.15
** 进入比赛网络连接超时 2个人无法开始
** 没进去的那个人 GlobalUserItem.bPasswordRoom=true,进普通场会有问题
** 定时器优化
*** 层级关系
    GameLayer 创建 GameModel
    GameModel 创建 GameViewLayer
    
    #+BEGIN_SRC lua
    local GameLayer = class("GameLayer", GameModel)
    
    function GameLayer:ctor( frameEngine,scene )      创建gameModel   
       GameLayer.super.ctor(self, frameEngine, scene)
    end

    function GameModel:ctor()
       self:createView()
    end
    --创建场景
    function GameLayer:CreateView()
       return GameViewLayer:create(self):addTo(self)
    end   
    #+END_SRC
    
